Version 1.0.4: (2025-06-27)
	- Increase sleep in in Hypstar class constructor (see v1.0.1) from 1.5 s 
	  to 2.5 s and clean up Rx buffer before proceeding
	- Bail out of AIT loop if serial read times out or is interrupted
	- Print timestamp at DEBUG log level when setting time
	- Log at TRACE level when log message is waiting and RxBuf is modified
	- Check if syslog retrieval succeeded before logging

Version 1.0.3: (2025-05-06)
	 - Handle missing ACK during baud rate change

Version 1.0.2: (2025-04-16)
	- Increase timeout during automatic integration time setting.

Version 1.0.1: (2025-04-02)
	- Sleep for 1.5 s in Hypstar class constructor before requesting HW info.
	  Otherwise LED source S/N and FW may be missing in logs.

Version 1.0.0: (2024-11-18)
	- bump version to 1.0.0 before merging vm_dev branch into main

Version 0.4.1: (2024-10-23)
	- add unsigned char * pExpected parameter to Hypstar::readPacket. If not
	  NULL (which is default), then discard all received bytes until the
	  expected one
	- Hypstar::waitForInstrumentToBoot calls readPacket with pExpected
	  pointing to 0xCB to ignore garbage before the first BOOTED packet and
	  avoid "Did not receive BOOTED packet..." error. 

Version 0.4.0: (2024-08-12)
	- Use loglevel from config when waiting for instrument to boot
	- fix return of pointer to local variable when throwing ePacketLengthMismatch

Version 0.3.7: (2024-08-07)
	- Improve logging of exceptions
	- Update log messages when waiting for instrument to boot
	- Fix Python 3.12 utcfromtimestamp warnings

Version 0.2:
	- renamed functions and structures to be self-explanatory;
	- driver now does not read calibration coefficients on each instantiation,
	  only when getCalibrationCoefficients() is called. This improves startup
	  time;
	- refactored out direct calls and packet handling from functions. Now
	  low-level serial has single(ish) point of entry;
	- removed boost dependencies;
	- singleton approach for instantiation to avoid serial hardware
	  congestion;
	- added unsafe functions (all the flash write - firmware, calibration)
